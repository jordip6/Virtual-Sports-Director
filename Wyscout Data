##En primer lugar convertimos todos los json de eventos de las 5 grandes ligas a archivos csv

import os, glob
import pandas as pd
import numpy as np

df_england = pd.read_json (r'\Users\jordi\Desktop\TFM\events_England.json')
extract_csv_england = df_england.to_csv(r'\Users\jordi\Desktop\TFM\events_England.csv')

df_france = pd.read_json (r'\Users\jordi\Desktop\TFM\events_France.json')
extract_csv_france = df_france.to_csv(r'\Users\jordi\Desktop\TFM\events_France.csv')

df_germany = pd.read_json (r'\Users\jordi\Desktop\TFM\events_Germany.json')
extract_csv_germany = df_germany.to_csv(r'\Users\jordi\Desktop\TFM\events_Germany.csv')

df_italy = pd.read_json (r'\Users\jordi\Desktop\TFM\events_Italy.json')
extract_csv_italy = df_italy.to_csv(r'\Users\jordi\Desktop\TFM\events_Italy.csv')

df_spain = pd.read_json (r'\Users\jordi\Desktop\TFM\events_Spain.json')
extract_csv_spain = df_spain.to_csv(r'\Users\jordi\Desktop\TFM\events_Spain.csv')

##A partir de los 5 csv generamos un csv único con todos los eventos

path = "C:/Users/jordi/Desktop/TFM"

all_files = glob.glob(os.path.join(path, "*.csv"))

all_df = []

for f in all_files:
    df = pd.read_csv(f, sep=',')
    df['file'] = f.split('/')[-1]
    all_df.append(df)
    
merged_df = pd.concat(all_df, ignore_index=True, sort=True)

merged_df['accurate']= merged_df['tags'].str.contains(" 1801")
merged_df.loc[merged_df['accurate']==True,'Accurate'] = 1
merged_df.loc[merged_df['accurate']==False,'Accurate'] = 0


merged_df['not accurate'] = merged_df['tags'].str.contains(" 1802")
merged_df.loc[merged_df['not accurate']==True,'Not Accurate'] = 1
merged_df.loc[merged_df['not accurate']==False,'Not Accurate'] = 0


merged_df['goal'] = merged_df['tags'].str.contains(" 101")
merged_df.loc[merged_df['goal']==True,'Goal'] = 1
merged_df.loc[merged_df['goal']==False,'Goal'] = 0


merged_df['won'] = merged_df['tags'].str.contains(" 703")
merged_df.loc[merged_df['won']==True,'Won'] = 1
merged_df.loc[merged_df['won']==False,'Won'] = 0


merged_df['neutral'] = merged_df['tags'].str.contains(" 702") 
merged_df.loc[merged_df['neutral']==True,'Neutral'] = 1
merged_df.loc[merged_df['neutral']==False,'Neutral'] = 0


merged_df['lost'] = merged_df['tags'].str.contains(" 701") 
merged_df.loc[merged_df['lost']==True,'Lost'] = 1
merged_df.loc[merged_df['lost']==False,'Lost'] = 0


merged_df['assist'] = merged_df['tags'].str.contains(" 301") 
merged_df.loc[merged_df['assist']==True,'Assist'] = 1
merged_df.loc[merged_df['assist']==False,'Assist'] = 0


merged_df['key pass'] = merged_df['tags'].str.contains(" 302")
merged_df.loc[merged_df['key pass']==True,'Key Pass'] = 1
merged_df.loc[merged_df['key pass']==False,'Key Pass'] = 0


merged_df['opportunity'] = merged_df['tags'].str.contains(" 201")
merged_df.loc[merged_df['opportunity']==True, 'Opportunity'] = 1
merged_df.loc[merged_df['opportunity']==False,'Opportunity'] = 0

merged_df['blocked'] = merged_df['tags'].str.contains(" 2101")
merged_df.loc[merged_df['blocked']==True,'Blocked'] = 1
merged_df.loc[merged_df['blocked']==False,'Blocked'] = 0


merged_df['anticipated'] = merged_df['tags'].str.contains(" 601")
merged_df.loc[merged_df['anticipated']==True,'Anticipated'] = 1
merged_df.loc[merged_df['anticipated']==False,'Anticipated'] = 0


merged_df['anticipation'] = merged_df['tags'].str.contains(" 602")
merged_df.loc[merged_df['anticipation']==True,'Anticipation'] = 1
merged_df.loc[merged_df['anticipation']==False,'Anticipation'] = 0


merged_df['interception'] = merged_df['tags'].str.contains(" 1401")
merged_df.loc[merged_df['interception']==True,'Interception'] = 1
merged_df.loc[merged_df['interception']==False,'Interception'] = 0


merged_df['take on left'] = merged_df['tags'].str.contains(" 503")
merged_df.loc[merged_df['take on left']==True,'Take On Left'] = 1
merged_df.loc[merged_df['take on left']==False,'Take On Left'] = 0


merged_df['take on right'] = merged_df['tags'].str.contains(" 504")
merged_df.loc[merged_df['take on right']==True,'Take On Right'] = 1
merged_df.loc[merged_df['take on right']==False,'Take On Right'] = 0

merged_df['sliding tackle'] = merged_df['tags'].str.contains(" 1601")
merged_df.loc[merged_df['sliding tackle']==True,'Sliding Tackle'] = 1
merged_df.loc[merged_df['sliding tackle']==False,'Sliding Tackle'] = 0

merged_df['through'] = merged_df['tags'].str.contains(" 901") 
merged_df.loc[merged_df['through']==True,'Through'] = 1
merged_df.loc[merged_df['through']==False,'Through'] = 0

merged_df['tiro a puerta'] = merged_df['tags'].str.contains("1201|1202|1203|1204|1205|1206|1207|1208|1209")
merged_df.loc[merged_df['tiro a puerta']==True,'Tiro a puerta'] = 1
merged_df.loc[merged_df['tiro a puerta']==False,'Tiro a puerta'] = 0

merged_df['tiro fuera'] = merged_df['tags'].str.contains("1210|1211|1212|1213|1214|1215|1216")
merged_df.loc[merged_df['tiro fuera']==True,'Tiro fuera'] = 1
merged_df.loc[merged_df['tiro fuera']==False,'Tiro fuera'] = 0

merged_df['tiro al palo'] = merged_df['tags'].str.contains("1217|1218|1219|1220|1221|1222|1223")
merged_df.loc[merged_df['tiro al palo']==True,'Tiro al palo'] = 1
merged_df.loc[merged_df['tiro al palo']==False,'Tiro al palo'] = 0

##Repetimos el mismo proceso para los JSON con los id de players y teams

df_players = pd.read_json (r'\Users\jordi\Desktop\TFM\Auxiliar\players.json')
df_players_short = df_players.drop(['passportArea','weight','middleName','currentTeamId','height','role', 'birthArea',
                                    'currentNationalTeamId'], axis=1)
#extract_csv_players = df_players_short.to_csv(r'\Users\jordi\OneDrive\Escritorio\TFM\Auxiliar\players.csv')

df_teams = pd.read_json (r'\Users\jordi\Desktop\TFM\Auxiliar\teams.json')
df_teams_short = df_teams.drop(columns = ['city', 'area','type'],axis=1)
#extract_csv_teams = df_teams_short.to_csv(r'\Users\jordi\OneDrive\Escritorio\TFM\Auxiliar\teams.csv')

##Ahora, hacemos un left join para obtener los nombres de los jugadores y de los equipos

result_players = pd.merge(merged_df, df_players_short, how ='left', left_on='playerId', right_on='wyId')
result_all = pd.merge(result_players,df_teams_short,how ='left', left_on='teamId', right_on='wyId', indicator = True)
result_all_short = result_all.drop(columns = ['matchId','matchPeriod','positions','accurate','not accurate','goal',
                                              'won','neutral','lost','assist','key pass','opportunity','blocked','anticipated',
                                              'anticipation','interception','take on left','take on right','sliding tackle',
                                              'through','tiro al palo','tiro a puerta','tiro fuera','eventSec','file','id',
                                              'tags','firstName','lastName','wyId_x','name','wyId_y','_merge'],axis=1)

##Deberemos agrupar por los KPI's más interesantes por posición

df_final=result_all_short.groupby(['playerId','eventId','eventName','subEventId','subEventName','shortName',
                                   'birthDate','foot','teamId','officialName','Accurate', 
                                   'Not Accurate','Goal','Won','Neutral','Lost','Assist','Key Pass','Opportunity',
                                   'Blocked','Anticipated','Anticipation', 'Interception','Take On Left','Take On Right',
                                   'Sliding Tackle','Through','Tiro a puerta','Tiro al palo','Tiro fuera']).count()

df_final_csv=df_final.to_csv(r'\Users\jordi\Desktop\TFM\Auxiliar\wy_scout_final.csv')
